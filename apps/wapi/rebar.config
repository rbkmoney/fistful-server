%% Common project erlang options.
{erl_opts, [

%%     % mandatory
%%     debug_info,
%%     warnings_as_errors,
%%     warn_export_all,
%%     warn_missing_spec,
%%     warn_untyped_record,
%%     warn_export_vars,

%%     % by default
%%     warn_unused_record,
%%     warn_bif_clash,
%%     warn_obsolete_guard,
%%     warn_unused_vars,
%%     warn_shadow_vars,
%%     warn_unused_import,
%%     warn_unused_function,
%%     warn_deprecated_function,

%%     % at will
%%     % bin_opt_info
%%     % no_auto_import
%%     % warn_missing_spec_all
    {parse_transform, lager_transform}
]}.

%% Common project dependencies.
{deps, [
    {cowboy,    "1.0.4"},
    %% {rfc3339,   "0.2.2"},
    {jose,      "1.9.0"},
    %% {lager,     "3.6.1"},
    {base64url, "0.0.1"},
    {libdecaf, "1.0.0"},
    {jsx,       "2.9.0"},
    %% {genlib,
    %%     {git, "https://github.com/rbkmoney/genlib.git", {branch, "master"}}
    %% },
    %% {woody,
    %%     {git, "git@github.com:rbkmoney/woody_erlang.git", {branch, "master"}}
    %% },
    %% {woody_user_identity,
    %%     {git, "git@github.com:rbkmoney/woody_erlang_user_identity.git", {branch, "master"}}
    %% },
    %% {dmsl,
    %%     {git, "git@github.com:rbkmoney/damsel.git", {branch, "release/erlang/master"}}
    %% },
    %% {lager_logstash_formatter,
    %%     {git, "git@github.com:rbkmoney/lager_logstash_formatter.git", {branch, "master"}}
    %% },
    {cowboy_cors,
        {git, "https://github.com/danielwhite/cowboy_cors.git", {branch, "master"}}
    },
    {cowboy_access_log,
        {git, "git@github.com:rbkmoney/cowboy_access_log.git", {branch, "master"}}
    },
    {payproc_errors,
        {git, "git@github.com:rbkmoney/payproc-errors-erlang.git", {branch, "master"}}
    },
    {erl_health,
        {git, "https://github.com/rbkmoney/erlang-health.git", {branch, master}}
    }
]}.

%% XRef checks
%% {xref_checks, [
%%     undefined_function_calls,
%%     undefined_functions,
%%     deprecated_functions_calls,
%%     deprecated_functions
%% ]}.
% at will
% {xref_warnings, true}.

%% Tests
%% {cover_enabled, true}.

%% Relx configuration
%% {relx, [
%%     {release, { capi , "0.1.0"}, [
%%         {recon        , load     }, % tools for introspection
%%         {runtime_tools, load     }, % debugger
%%         {tools        , load     }, % profiler
%%         capi,
%%         sasl
%%     ]},
%%     {sys_config, "./config/sys.config"},
%%     {vm_args, "./config/vm.args"},
%%     {dev_mode, true},
%%     {include_erts, false},
%%     {extended_start_script, true}
%% ]}.

%% Dialyzer static analyzing
%% {dialyzer, [
%%     {warnings, [
%%         % mandatory
%%         unmatched_returns,
%%         error_handling,
%%         race_conditions,
%%         unknown
%%     ]},
%%     {plt_apps, all_deps}
%% ]}.

%% {profiles, [
%%     {prod, [
%%         {deps, [
%%             % for introspection on production
%%             {recon, "2.3.2"}
%%         ]},
%%         {relx, [
%%             {dev_mode, false},
%%             {include_erts, true},
%%             {overlay, [
%%                 {mkdir , "var/keys/capi"                                              },
%%                 {copy  , "var/keys/capi/private.pem"    , "var/keys/capi/private.pem" }
%%             ]}
%%         ]}
%%     ]},
%%     {test, [
%%         {cover_enabled, true},
%%         {deps, []}
%%     ]}
%% ]}.

%% {pre_hooks, [
%%     {thrift, "git submodule update --init"}
%% ]}.
